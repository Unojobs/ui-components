import React, { useEffect, useState } from 'react';

import { Box, createIcon } from '../../primitives';
import type {
  IProgressIconProps,
  IProgressPageType,
  IProgressStatusType,
} from './types';

type IconProps = {
  fill?: string;
  size?: string | number;
  marginTop?: number | string;
  marginLeft?: number | string;
};

/**Profile Icon */
export const ProfileIcon = ({
  fill,
  size,
  marginTop,
  marginLeft,
}: IconProps) => {
  const CustomIcon = createIcon({
    viewBox: '1 0 16 16',
    path: (
      <>
        <path
          d="M5.33203 4.50004C5.33203 3.02952 6.52817 1.83337 7.9987 1.83337C9.4689 1.83337 10.6648 3.02899 10.6654 4.49908C10.6592 5.94199 9.53541 7.1053 8.10287 7.16004H8.10285H8.10283H8.1028H8.10278H8.10275H8.10273H8.1027H8.10268H8.10266H8.10263H8.10261H8.10258H8.10256H8.10253H8.10251H8.10248H8.10246H8.10243H8.10241H8.10238H8.10236H8.10233H8.10231H8.10228H8.10226H8.10223H8.1022H8.10218H8.10215H8.10213H8.1021H8.10207H8.10205H8.10202H8.10199H8.10197H8.10194H8.10191H8.10189H8.10186H8.10183H8.10181H8.10178H8.10175H8.10172H8.1017H8.10167H8.10164H8.10161H8.10158H8.10156H8.10153H8.1015H8.10147H8.10144H8.10141H8.10139H8.10136H8.10133H8.1013H8.10127H8.10124H8.10121H8.10118H8.10115H8.10112H8.10109H8.10106H8.10103H8.101H8.10097H8.10094H8.10091H8.10088H8.10085H8.10082H8.10079H8.10076H8.10073H8.10069H8.10066H8.10063H8.1006H8.10057H8.10054H8.1005H8.10047H8.10044H8.10041H8.10038H8.10034H8.10031H8.10028H8.10024H8.10021H8.10018H8.10014H8.10011H8.10008H8.10004H8.10001H8.09998H8.09994H8.09991H8.09987H8.09984H8.0998H8.09977H8.09973H8.0997H8.09966H8.09963H8.09959H8.09956H8.09952H8.09949H8.09945H8.09941H8.09938H8.09934H8.0993H8.09927H8.09923H8.09919H8.09916H8.09912H8.09908H8.09904H8.09901H8.09897H8.09893H8.09889H8.09885H8.09881H8.09878H8.09874H8.0987H8.09862H8.09854H8.09846H8.09839H8.09831H8.09823H8.09815H8.09808H8.098H8.09792H8.09785H8.09777H8.09769H8.09762H8.09754H8.09747H8.09739H8.09732H8.09724H8.09716H8.09709H8.09701H8.09694C8.03046 7.15315 7.96392 7.15393 7.90328 7.15903C6.43853 7.09227 5.33203 5.92982 5.33203 4.50004Z"
          fill={fill ? fill : '#ffffff'}
          stroke={fill ? fill : '#ffffff'}
          width="16"
          height="16"
        />
        <path
          d="M4.89398 13.3115L4.89261 13.3106C4.15366 12.818 3.80859 12.1984 3.80859 11.5866C3.80859 10.9745 4.15404 10.3485 4.89896 9.84953C5.7372 9.29507 6.86207 9.0033 8.01026 9.0033C9.15908 9.0033 10.2803 9.29537 11.1112 9.84932C11.8466 10.3395 12.1895 10.9588 12.1953 11.5754C12.1945 12.1936 11.8488 12.8129 11.1094 13.3119C10.2752 13.8718 9.15131 14.1666 8.00193 14.1666C6.85231 14.1666 5.7282 13.8716 4.89398 13.3115Z"
          fill={fill ? fill : '#ffffff'}
          stroke={fill ? fill : '#ffffff'}
          width="16"
          height="16"
        />
      </>
    ),
  });
  return (
    <CustomIcon
      size={size ? size : 6}
      cursor="pointer"
      marginTop={marginTop ? marginTop : 2}
      marginLeft={marginLeft ? marginLeft : 2.5}
    />
  );
};

/**BriefCaseIcon */
export const BriefCaseIcon = ({
  fill,
  size,
  marginTop,
  marginLeft,
}: IconProps) => {
  const CustomIcon = createIcon({
    viewBox: '1 1 16 16',
    path: (
      <>
        <path
          d="M5.48734 4.22005H5.44068H4.98734H4.82734C3.50688 4.22005 2.74005 4.52186 2.31192 4.99498C1.81101 5.55195 1.79921 6.33113 1.86387 6.99354L1.86898 7.02934L1.87064 7.04096L1.87176 7.05265L1.91568 7.51383C2.07735 7.61884 2.28214 7.74889 2.4035 7.81631L2.41754 7.82411L2.43106 7.8328C2.50432 7.8799 2.58601 7.92379 2.6893 7.97888L2.69489 7.98186L2.69487 7.98189C3.78254 8.57979 4.98115 8.9819 6.20078 9.17985L6.58163 9.24166L6.58735 9.30149C6.58733 9.28331 6.58734 9.26519 6.58734 9.2472L6.58734 9.22672V8.38672V7.88672H7.08734H8.72734H9.22734V8.38672V9.22005L9.22734 9.24108C9.22735 9.28342 9.22736 9.32619 9.22706 9.36878L9.2371 9.22962L9.6275 9.16647C10.9263 8.95636 12.1813 8.50414 13.3151 7.84167L13.3292 7.83346L13.3437 7.82617L13.3439 7.82609L13.3448 7.82556L13.3528 7.82064L13.3737 7.80725C13.383 7.80131 13.3956 7.79331 13.4101 7.78464L13.4212 7.77796L13.4213 7.7781C13.6428 7.65292 13.8775 7.49783 14.1015 7.33843L14.1035 7.32049L14.1037 7.31816L14.1368 7.00716L14.1384 6.99245L14.1407 6.97834C14.1407 6.97834 14.1412 6.97486 14.1426 6.95925L14.1429 6.95533C14.1442 6.94041 14.1463 6.91603 14.1499 6.88731C14.2004 6.23437 14.1631 5.51247 13.6898 4.98874L5.48734 4.22005ZM5.48734 4.22005H5.94068H10.0607H10.5607V4.21339H11.014H11.174C12.4886 4.21339 13.2619 4.51555 13.6897 4.98866L5.48734 4.22005ZM9.00279 10.2191C9.03169 10.1861 9.05658 10.1519 9.07805 10.1173C9.05607 10.1541 9.03107 10.1881 9.00279 10.2191ZM7.91373 10.5334C7.91661 10.5334 7.91949 10.5334 7.92236 10.5334C7.91958 10.5334 7.9168 10.5334 7.91401 10.5334C7.91392 10.5334 7.91382 10.5334 7.91373 10.5334Z"
          fill={fill ? fill : '#111111'}
          stroke={fill ? fill : '#111111'}
          width="16"
          height="16"
        />
        <path
          d="M13.856 9.73645L13.8592 9.73518L13.8602 9.73493L13.8607 9.73494C13.8617 9.73505 13.8651 9.73579 13.869 9.73854C13.871 9.73993 13.8723 9.7412 13.873 9.74202C13.873 9.74238 13.8729 9.74281 13.8729 9.74331L13.661 12.0779C13.5949 12.7041 13.4412 13.232 13.0474 13.615C12.6561 13.9956 11.9361 14.32 10.5386 14.32H5.45859C4.06108 14.32 3.34087 13.9957 2.94944 13.6155C2.55579 13.2332 2.40227 12.7069 2.33621 12.0844L2.13583 9.88025C2.13578 9.87973 2.13575 9.87928 2.13574 9.87891C2.13638 9.87815 2.13752 9.87698 2.13935 9.87568C2.14299 9.87311 2.14601 9.87241 2.14688 9.87231L2.14717 9.8723L2.14807 9.87252L2.15114 9.87368C2.90784 10.2104 4.07991 10.7081 4.89376 10.9355C4.90684 10.9392 4.93565 10.9547 4.95851 10.9989C5.49364 12.0324 6.5692 12.5134 7.91193 12.5134C9.24926 12.5134 10.3305 12.0112 10.8651 10.9792C10.8877 10.9355 10.917 10.919 10.9316 10.9149C11.8014 10.6699 13.0594 10.1091 13.856 9.73645Z"
          fill={fill ? fill : '#111111'}
          stroke={fill ? fill : '#111111'}
          width="16"
          height="16"
        />
      </>
    ),
  });
  return (
    <CustomIcon
      size={size ? size : 6}
      cursor="pointer"
      marginTop={marginTop ? marginTop : 2}
      marginLeft={marginLeft ? marginLeft : 2.5}
    />
  );
};

/**ReviwIcon */
export const ReviwIcon = ({ fill, size, marginTop, marginLeft }: IconProps) => {
  const CustomIcon = createIcon({
    viewBox: '1 0 16 16',
    path: (
      <>
        <path
          d="M5.33333 1.83337H10.6667C11.738 1.83337 12.421 2.13696 12.8419 2.59027C13.2691 3.05028 13.5 3.74335 13.5 4.66671V11.3334C13.5 12.2567 13.2691 12.9498 12.8419 13.4098C12.421 13.8631 11.738 14.1667 10.6667 14.1667H5.33333C4.26197 14.1667 3.57899 13.8631 3.15806 13.4098C2.73091 12.9498 2.5 12.2567 2.5 11.3334V4.66671C2.5 3.74335 2.73091 3.05028 3.15806 2.59027C3.57899 2.13696 4.26197 1.83337 5.33333 1.83337ZM8 7.66671H5.33333C4.78386 7.66671 4.33333 8.11723 4.33333 8.66671C4.33333 9.21618 4.78386 9.66671 5.33333 9.66671H8C8.54948 9.66671 9 9.21618 9 8.66671C9 8.11723 8.54948 7.66671 8 7.66671ZM4.33333 11.3334C4.33333 11.8828 4.78386 12.3334 5.33333 12.3334H10.6667C11.2161 12.3334 11.6667 11.8828 11.6667 11.3334C11.6667 10.7839 11.2161 10.3334 10.6667 10.3334H5.33333C4.78386 10.3334 4.33333 10.7839 4.33333 11.3334ZM11 6.66671H12.3333C12.8828 6.66671 13.3333 6.21618 13.3333 5.66671C13.3333 5.11723 12.8828 4.66671 12.3333 4.66671H11C10.8161 4.66671 10.6667 4.51723 10.6667 4.33337V3.00004C10.6667 2.45056 10.2161 2.00004 9.66667 2.00004C9.11719 2.00004 8.66667 2.45057 8.66667 3.00004V4.33337C8.66667 5.62285 9.71052 6.66671 11 6.66671Z"
          fill={fill ? fill : '#111111'}
          stroke={fill ? fill : '#111111'}
          width="16"
          height="16"
        />
      </>
    ),
  });
  return (
    <CustomIcon
      size={size ? size : 6}
      cursor="pointer"
      marginTop={marginTop ? marginTop : 2}
      marginLeft={marginLeft ? marginLeft : 2.5}
    />
  );
};

/**CompleteIcon */
export const CompleteIcon = ({
  fill,
  size,
  marginTop,
  marginLeft,
}: IconProps) => {
  const CustomIcon = createIcon({
    viewBox: '0 0 20 20',
    path: (
      <>
        <path
          d="M6.4327 2.92411L6.43278 2.92421L6.44135 2.91673L7.48433 2.00661C7.76636 1.7716 8.24304 1.77524 8.5138 2.00623C8.51398 2.00638 8.51415 2.00653 8.51433 2.00668L9.56514 2.91118C9.56542 2.91142 9.56569 2.91166 9.56597 2.9119C9.7251 3.04956 9.92812 3.15389 10.1159 3.22369C10.304 3.29358 10.5249 3.34666 10.7326 3.34666H11.8659C12.2965 3.34666 12.6526 3.70281 12.6526 4.13333V5.26667C12.6526 5.47702 12.7054 5.69787 12.7759 5.88666C12.8463 6.07518 12.9509 6.27562 13.0876 6.43352C13.0877 6.43372 13.0879 6.43393 13.0881 6.43413L13.9926 7.48494C13.9927 7.48511 13.9929 7.48528 13.993 7.48545C14.2256 7.75805 14.2265 8.2424 13.9981 8.51636L13.0948 9.56587C13.0945 9.56611 13.0943 9.56635 13.0941 9.5666C12.9564 9.72573 12.8521 9.92881 12.7822 10.1167C12.7124 10.3048 12.6593 10.5256 12.6593 10.7333V11.8667C12.6593 12.2972 12.3031 12.6533 11.8726 12.6533H10.7393C10.5289 12.6533 10.3081 12.7061 10.1193 12.7766C9.93078 12.847 9.73036 12.9516 9.57248 13.0882C9.57225 13.0884 9.57203 13.0886 9.57181 13.0888L8.52201 13.9924C8.24011 14.2284 7.76251 14.2251 7.49139 13.9938C7.49122 13.9936 7.49105 13.9935 7.49088 13.9933L6.44007 13.0888C6.43986 13.0886 6.43966 13.0885 6.43945 13.0883C6.2803 12.9505 6.07718 12.8461 5.88926 12.7763C5.70117 12.7064 5.4803 12.6533 5.2726 12.6533H4.11927C3.68875 12.6533 3.3326 12.2972 3.3326 11.8667V10.7267C3.3326 10.5186 3.27935 10.2994 3.21068 10.1139C3.14175 9.92772 3.04027 9.72951 2.91005 9.57324L2.91006 9.57323L2.90708 9.56972L2.00868 8.51161C2.00846 8.51134 2.00823 8.51107 2.00801 8.5108C1.77858 8.23694 1.77858 7.76306 2.00801 7.4892C2.00823 7.48893 2.00846 7.48866 2.00868 7.48839L2.90708 6.43028L2.9071 6.43029L2.91005 6.42676C3.04027 6.27049 3.14175 6.07228 3.21068 5.88607C3.27935 5.70055 3.3326 5.48136 3.3326 5.27333V4.13333C3.3326 3.70281 3.68875 3.34666 4.11927 3.34666H5.2726C5.48007 3.34666 5.70043 3.29366 5.887 3.22535C6.07395 3.15691 6.27504 3.05549 6.4327 2.92411ZM7.90616 10.3136L11.1262 7.09355C11.5148 6.70496 11.5148 6.06837 11.1262 5.67978C10.7376 5.29118 10.101 5.29118 9.71238 5.67978L7.19927 8.19289L6.29282 7.28645C5.90423 6.89785 5.26765 6.89785 4.87905 7.28644C4.49045 7.67504 4.49046 8.31162 4.87905 8.70022L6.49238 10.3136C6.67842 10.4996 6.93182 10.6067 7.19927 10.6067C7.46672 10.6067 7.72013 10.4996 7.90616 10.3136Z"
          fill={fill ? fill : '#ffffff'}
          stroke={fill ? fill : '#ffffff'}
          width="20"
          height="20"
        />
      </>
    ),
  });
  return (
    <CustomIcon
      size={size ? size : 8}
      cursor="pointer"
      marginTop={marginTop ? marginTop : '7px'}
      marginLeft={marginLeft ? marginLeft : 2}
    />
  );
};

/** ProgressIcon component   */
export const ProgressIcon: React.FC<IProgressIconProps> = (props) => {
  const [backgroundColor, setBackgroundColor] = useState<string>('#ffffff');

  useEffect(() => {
    if (props.status.toLocaleLowerCase() === 'on') {
      setBackgroundColor('#1974FC');
    } else if (props.status.toLocaleLowerCase() === 'complete') {
      setBackgroundColor('#66B949');
    } else {
      setBackgroundColor('#ffffff');
    }
  }, [props.status]);

  const selectIcon = () => {
    if (props.page?.toLocaleLowerCase() === 'profile') {
      return (
        <ProfileIcon
          size={props.size}
          fill={props.fill}
          marginLeft={props.marginLeft}
          marginTop={props.marginTop}
        />
      );
    } else if (props.page?.toLocaleLowerCase() === 'review') {
      return (
        <ReviwIcon
          size={props.size}
          fill={props.fill}
          marginLeft={props.marginLeft}
          marginTop={props.marginTop}
        />
      );
    } else if (props.page?.toLocaleLowerCase() === 'job') {
      return (
        <BriefCaseIcon
          size={props.size}
          fill={props.fill}
          marginLeft={props.marginLeft}
          marginTop={props.marginTop}
        />
      );
    } else if (props.page?.toLocaleLowerCase() === 'complete') {
      return (
        <CompleteIcon
          size={props.size}
          fill={props.fill}
          marginLeft={props.marginLeft}
          marginTop={props.marginTop}
        />
      );
    } else {
      return;
    }
  };

  return (
    <Box
      borderRadius="50%"
      width={'40px'}
      height={'40px'}
      backgroundColor={backgroundColor}
      borderColor={props.borderColor ? props.borderColor : 'none'}
      borderWidth={props.status.toLocaleLowerCase() === 'off' ? '1px' : 'none'}
      borderStyle={
        props.status.toLocaleLowerCase() === 'off' ? 'solid' : 'none'
      }
    >
      {selectIcon()}
    </Box>
  );
};

/** default props for ProgressIcon */
ProgressIcon.defaultProps = {
  onClick: undefined,
  status: 'off' as IProgressStatusType,
  borderColor: '#F3F3F3',
  page: 'profile' as IProgressPageType,
};
